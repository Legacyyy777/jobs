import os
import logging
from typing import List
from dotenv import load_dotenv

load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)

class Config:
    BOT_TOKEN = os.getenv('BOT_TOKEN')
    ADMIN_CHAT_ID = int(os.getenv('ADMIN_CHAT_ID', 0))
    MODERATION_CHAT_ID = os.getenv('MODERATION_CHAT_ID')  # ID —á–∞—Ç–∞/–∫–∞–Ω–∞–ª–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
    PAINTER_TOPIC_ID = int(os.getenv('PAINTER_TOPIC_ID', 0)) if os.getenv('PAINTER_TOPIC_ID') else None  # ID —Ç–æ–ø–∏–∫–∞ –¥–ª—è –º–∞–ª—è—Ä–∞
    SANDBLASTER_TOPIC_ID = int(os.getenv('SANDBLASTER_TOPIC_ID', 0)) if os.getenv('SANDBLASTER_TOPIC_ID') else None  # ID —Ç–æ–ø–∏–∫–∞ –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    @property
    def MODERATORS(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        moderators_str = os.getenv('MODERATORS', '')
        if not moderators_str:
            return []
        try:
            return [int(mod_id.strip()) for mod_id in moderators_str.split(',') if mod_id.strip()]
        except ValueError:
            logging.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ MODERATORS: {moderators_str}")
            return []
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞: —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö user_id —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
    _ALLOWED_USER_IDS_RAW = os.getenv('ALLOWED_USER_IDS', '').strip()
    ALLOWED_USER_IDS: List[int] = (
        [int(x) for x in _ALLOWED_USER_IDS_RAW.split(',') if x.strip().isdigit()]
        if _ALLOWED_USER_IDS_RAW else []
    )
    
    # –¶–µ–Ω—ã –∑–∞ –æ–¥–∏–Ω–æ—á–Ω—ã–µ –¥–∏—Å–∫–∏
    PRICE_SINGLE_R12 = int(os.getenv('PRICE_SINGLE_R12', 150))
    PRICE_SINGLE_R13 = int(os.getenv('PRICE_SINGLE_R13', 200))
    PRICE_SINGLE_R14 = int(os.getenv('PRICE_SINGLE_R14', 300))
    PRICE_SINGLE_R15 = int(os.getenv('PRICE_SINGLE_R15', 300))
    PRICE_SINGLE_R16 = int(os.getenv('PRICE_SINGLE_R16', 400))
    PRICE_SINGLE_R17 = int(os.getenv('PRICE_SINGLE_R17', 500))
    PRICE_SINGLE_R18 = int(os.getenv('PRICE_SINGLE_R18', 700))
    PRICE_SINGLE_R19 = int(os.getenv('PRICE_SINGLE_R19', 900))
    PRICE_SINGLE_R20 = int(os.getenv('PRICE_SINGLE_R20', 1100))
    PRICE_SINGLE_R21 = int(os.getenv('PRICE_SINGLE_R21', 1200))
    PRICE_SINGLE_R22 = int(os.getenv('PRICE_SINGLE_R22', 1200))
    PRICE_SINGLE_R23 = int(os.getenv('PRICE_SINGLE_R23', 1300))
    PRICE_SINGLE_R24 = int(os.getenv('PRICE_SINGLE_R24', 1500))
    
    # –¶–µ–Ω—ã –∑–∞ –∫–æ–º–ø–ª–µ–∫—Ç—ã
    PRICE_SET_R12 = int(os.getenv('PRICE_SET_R12', 600))
    PRICE_SET_R13 = int(os.getenv('PRICE_SET_R13', 700))
    PRICE_SET_R14 = int(os.getenv('PRICE_SET_R14', 700))
    PRICE_SET_R15 = int(os.getenv('PRICE_SET_R15', 800))
    PRICE_SET_R16 = int(os.getenv('PRICE_SET_R16', 800))
    PRICE_SET_R17 = int(os.getenv('PRICE_SET_R17', 1000))
    PRICE_SET_R18 = int(os.getenv('PRICE_SET_R18', 1200))
    PRICE_SET_R19 = int(os.getenv('PRICE_SET_R19', 1400))
    PRICE_SET_R20 = int(os.getenv('PRICE_SET_R20', 1600))
    PRICE_SET_R21 = int(os.getenv('PRICE_SET_R21', 1800))
    PRICE_SET_R22 = int(os.getenv('PRICE_SET_R22', 2000))
    PRICE_SET_R23 = int(os.getenv('PRICE_SET_R23', 2200))
    PRICE_SET_R24 = int(os.getenv('PRICE_SET_R24', 2500))
    
    # –î–æ–ø–ª–∞—Ç–∞ –∑–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É
    PRICE_PREP_SINGLE = int(os.getenv('PRICE_PREP_SINGLE', 210))  # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–¥–∏–Ω–æ—á–∫–∏
    PRICE_PREP_SET = int(os.getenv('PRICE_PREP_SET', 300))        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞
    
    # –î–æ–ø–ª–∞—Ç–∞ –∑–∞ –∞–ª—é–º–æ—Ö—Ä–æ–º
    PRICE_ALUMOCHROME_EXTRA = int(os.getenv('PRICE_ALUMOCHROME_EXTRA', 300))
    
    # –¶–µ–Ω—ã –∑–∞ –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–æ–≤ (–¥–ª—è –º–∞–ª—è—Ä–∞)
    PRICE_NAKIDKA = int(os.getenv('PRICE_NAKIDKA', 300))  # –ü–æ–∫—Ä–∞—Å–∫–∞ –Ω–∞—Å–∞–¥–æ–∫
    PRICE_SUSPENSIA_PAINT = int(os.getenv('PRICE_SUSPENSIA_PAINT', 750))  # –°—É–ø–æ—Ä—Ç –ø–æ–∫—Ä–∞—Å–∫–∞
    PRICE_SUSPENSIA_LOGO = int(os.getenv('PRICE_SUSPENSIA_LOGO', 875))  # –°—É–ø–æ—Ä—Ç —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º
    
    # –¶–µ–Ω—ã –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞ - –∫–æ–º–ø–ª–µ–∫—Ç—ã
    PRICE_SANDBLASTER_SET_R12 = int(os.getenv('PRICE_SANDBLASTER_SET_R12', 600))
    PRICE_SANDBLASTER_SET_R13 = int(os.getenv('PRICE_SANDBLASTER_SET_R13', 700))
    PRICE_SANDBLASTER_SET_R14 = int(os.getenv('PRICE_SANDBLASTER_SET_R14', 700))
    PRICE_SANDBLASTER_SET_R15 = int(os.getenv('PRICE_SANDBLASTER_SET_R15', 700))
    PRICE_SANDBLASTER_SET_R16 = int(os.getenv('PRICE_SANDBLASTER_SET_R16', 820))
    PRICE_SANDBLASTER_SET_R17 = int(os.getenv('PRICE_SANDBLASTER_SET_R17', 820))
    PRICE_SANDBLASTER_SET_R18 = int(os.getenv('PRICE_SANDBLASTER_SET_R18', 940))
    PRICE_SANDBLASTER_SET_R19 = int(os.getenv('PRICE_SANDBLASTER_SET_R19', 1200))
    PRICE_SANDBLASTER_SET_R20 = int(os.getenv('PRICE_SANDBLASTER_SET_R20', 1200))
    PRICE_SANDBLASTER_SET_R21 = int(os.getenv('PRICE_SANDBLASTER_SET_R21', 1200))
    PRICE_SANDBLASTER_SET_R22 = int(os.getenv('PRICE_SANDBLASTER_SET_R22', 1600))
    PRICE_SANDBLASTER_SET_R23 = int(os.getenv('PRICE_SANDBLASTER_SET_R23', 1800))
    PRICE_SANDBLASTER_SET_R24 = int(os.getenv('PRICE_SANDBLASTER_SET_R24', 2000))
    
    # –¶–µ–Ω—ã –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞ - –æ–¥–∏–Ω–æ—á–∫–∏
    PRICE_SANDBLASTER_SINGLE_R12 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R12', 150))
    PRICE_SANDBLASTER_SINGLE_R13 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R13', 175))
    PRICE_SANDBLASTER_SINGLE_R14 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R14', 175))
    PRICE_SANDBLASTER_SINGLE_R15 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R15', 175))
    PRICE_SANDBLASTER_SINGLE_R16 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R16', 205))
    PRICE_SANDBLASTER_SINGLE_R17 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R17', 205))
    PRICE_SANDBLASTER_SINGLE_R18 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R18', 235))
    PRICE_SANDBLASTER_SINGLE_R19 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R19', 300))
    PRICE_SANDBLASTER_SINGLE_R20 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R20', 300))
    PRICE_SANDBLASTER_SINGLE_R21 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R21', 300))
    PRICE_SANDBLASTER_SINGLE_R22 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R22', 400))
    PRICE_SANDBLASTER_SINGLE_R23 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R23', 450))
    PRICE_SANDBLASTER_SINGLE_R24 = int(os.getenv('PRICE_SANDBLASTER_SINGLE_R24', 500))
    
    # –¶–µ–Ω—ã –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞ - –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã
    PRICE_SANDBLASTER_NAKIDKA = int(os.getenv('PRICE_SANDBLASTER_NAKIDKA', 150))  # –ù–∞—Å–∞–¥–∫–∏
    PRICE_SANDBLASTER_SUSPENSIA = int(os.getenv('PRICE_SANDBLASTER_SUSPENSIA', 305))  # –°—É–ø–æ—Ä—Ç–∞ –∑–∞ —à—Ç—É–∫—É
    
    # –¶–µ–Ω—ã –∑–∞ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞
    PRICE_SPRAYING_DEEP = int(os.getenv('PRICE_SPRAYING_DEEP', 537))  # –ì–ª—É–±–æ–∫–æ–µ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ
    PRICE_SPRAYING_SHALLOW = int(os.getenv('PRICE_SPRAYING_SHALLOW', 237))  # –ù–µ–≥–ª—É–±–æ–∫–æ–µ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    DB_HOST = os.getenv('DB_HOST', 'db')
    DB_PORT = int(os.getenv('DB_PORT', 5432))
    DB_NAME = os.getenv('DB_NAME', 'painter_bot')
    DB_USER = os.getenv('DB_USER', 'postgres')
    DB_PASSWORD = os.getenv('DB_PASSWORD', 'postgres')

config = Config()

# –ö—Ä–∞—Å–∏–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω
def log_prices():
    logging.info("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    logging.info("‚ïë                                 üí∞ –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ï –¶–ï–ù–´ üí∞                           ‚ïë")
    logging.info("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£")
    
    # –¶–µ–Ω—ã –¥–ª—è –º–∞–ª—è—Ä–∞ - –æ–¥–∏–Ω–æ—á–Ω—ã–µ –¥–∏—Å–∫–∏
    logging.info("‚ïë üé® –ú–ê–õ–Ø–† - –û–î–ò–ù–û–ß–ù–´–ï –î–ò–°–ö–ò:                                                      ‚ïë")
    prices_single = [
        ("R12", config.PRICE_SINGLE_R12), ("R13", config.PRICE_SINGLE_R13), ("R14", config.PRICE_SINGLE_R14),
        ("R15", config.PRICE_SINGLE_R15), ("R16", config.PRICE_SINGLE_R16), ("R17", config.PRICE_SINGLE_R17),
        ("R18", config.PRICE_SINGLE_R18), ("R19", config.PRICE_SINGLE_R19), ("R20", config.PRICE_SINGLE_R20),
        ("R21", config.PRICE_SINGLE_R21), ("R22", config.PRICE_SINGLE_R22), ("R23", config.PRICE_SINGLE_R23),
        ("R24", config.PRICE_SINGLE_R24)
    ]
    
    for size, price in prices_single:
        logging.info(f"‚ïë   {size}: {price:>4}‚ÇΩ                                                                  ‚ïë")
    
    # –¶–µ–Ω—ã –¥–ª—è –º–∞–ª—è—Ä–∞ - –∫–æ–º–ø–ª–µ–∫—Ç—ã
    logging.info("‚ïë üé® –ú–ê–õ–Ø–† - –ö–û–ú–ü–õ–ï–ö–¢–´:                                                           ‚ïë")
    prices_set = [
        ("R12", config.PRICE_SET_R12), ("R13", config.PRICE_SET_R13), ("R14", config.PRICE_SET_R14),
        ("R15", config.PRICE_SET_R15), ("R16", config.PRICE_SET_R16), ("R17", config.PRICE_SET_R17),
        ("R18", config.PRICE_SET_R18), ("R19", config.PRICE_SET_R19), ("R20", config.PRICE_SET_R20),
        ("R21", config.PRICE_SET_R21), ("R22", config.PRICE_SET_R22), ("R23", config.PRICE_SET_R23),
        ("R24", config.PRICE_SET_R24)
    ]
    
    for size, price in prices_set:
        logging.info(f"‚ïë   {size}: {price:>4}‚ÇΩ                                                                  ‚ïë")
    
    # –¶–µ–Ω—ã –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞ - –æ–¥–∏–Ω–æ—á–Ω—ã–µ –¥–∏—Å–∫–∏
    logging.info("‚ïë üí® –ü–ï–°–ö–û–°–¢–†–£–ô–©–ò–ö - –û–î–ò–ù–û–ß–ù–´–ï –î–ò–°–ö–ò:                                              ‚ïë")
    sandblaster_single = [
        ("R12", config.PRICE_SANDBLASTER_SINGLE_R12), ("R13", config.PRICE_SANDBLASTER_SINGLE_R13),
        ("R14", config.PRICE_SANDBLASTER_SINGLE_R14), ("R15", config.PRICE_SANDBLASTER_SINGLE_R15),
        ("R16", config.PRICE_SANDBLASTER_SINGLE_R16), ("R17", config.PRICE_SANDBLASTER_SINGLE_R17),
        ("R18", config.PRICE_SANDBLASTER_SINGLE_R18), ("R19", config.PRICE_SANDBLASTER_SINGLE_R19),
        ("R20", config.PRICE_SANDBLASTER_SINGLE_R20), ("R21", config.PRICE_SANDBLASTER_SINGLE_R21),
        ("R22", config.PRICE_SANDBLASTER_SINGLE_R22), ("R23", config.PRICE_SANDBLASTER_SINGLE_R23),
        ("R24", config.PRICE_SANDBLASTER_SINGLE_R24)
    ]
    
    for size, price in sandblaster_single:
        logging.info(f"‚ïë   {size}: {price:>4}‚ÇΩ                                                                  ‚ïë")
    
    # –¶–µ–Ω—ã –¥–ª—è –ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫–∞ - –∫–æ–º–ø–ª–µ–∫—Ç—ã
    logging.info("‚ïë üí® –ü–ï–°–ö–û–°–¢–†–£–ô–©–ò–ö - –ö–û–ú–ü–õ–ï–ö–¢–´:                                                    ‚ïë")
    sandblaster_set = [
        ("R12", config.PRICE_SANDBLASTER_SET_R12), ("R13", config.PRICE_SANDBLASTER_SET_R13),
        ("R14", config.PRICE_SANDBLASTER_SET_R14), ("R15", config.PRICE_SANDBLASTER_SET_R15),
        ("R16", config.PRICE_SANDBLASTER_SET_R16), ("R17", config.PRICE_SANDBLASTER_SET_R17),
        ("R18", config.PRICE_SANDBLASTER_SET_R18), ("R19", config.PRICE_SANDBLASTER_SET_R19),
        ("R20", config.PRICE_SANDBLASTER_SET_R20), ("R21", config.PRICE_SANDBLASTER_SET_R21),
        ("R22", config.PRICE_SANDBLASTER_SET_R22), ("R23", config.PRICE_SANDBLASTER_SET_R23),
        ("R24", config.PRICE_SANDBLASTER_SET_R24)
    ]
    
    for size, price in sandblaster_set:
        logging.info(f"‚ïë   {size}: {price:>4}‚ÇΩ                                                                  ‚ïë")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
    logging.info("‚ïë üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–°–õ–£–ì–ò:                                                         ‚ïë")
    logging.info(f"‚ïë   –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –¥–∏—Å–∫–∞: {config.PRICE_PREP_SINGLE:>4}‚ÇΩ                                       ‚ïë")
    logging.info(f"‚ïë   –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞: {config.PRICE_PREP_SET:>4}‚ÇΩ                                           ‚ïë")
    logging.info(f"‚ïë   –î–æ–ø–ª–∞—Ç–∞ –∑–∞ –∞–ª—é–º–æ—Ö—Ä–æ–º: {config.PRICE_ALUMOCHROME_EXTRA:>4}‚ÇΩ                                        ‚ïë")
    
    # –¶–µ–Ω—ã –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥
    logging.info("‚ïë üéØ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –£–°–õ–£–ì–ò:                                                          ‚ïë")
    logging.info(f"‚ïë   –ù–∞—Å–∞–¥–∫–∏ (–º–∞–ª—è—Ä): {config.PRICE_NAKIDKA:>4}‚ÇΩ                                                ‚ïë")
    logging.info(f"‚ïë   –°—É–ø–æ—Ä—Ç–∞ –ø–æ–∫—Ä–∞—Å–∫–∞ (–º–∞–ª—è—Ä): {config.PRICE_SUSPENSIA_PAINT:>4}‚ÇΩ                                  ‚ïë")
    logging.info(f"‚ïë   –°—É–ø–æ—Ä—Ç–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º (–º–∞–ª—è—Ä): {config.PRICE_SUSPENSIA_LOGO:>4}‚ÇΩ                               ‚ïë")
    logging.info(f"‚ïë   –ù–∞—Å–∞–¥–∫–∏ (–ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫): {config.PRICE_SANDBLASTER_NAKIDKA:>4}‚ÇΩ                              ‚ïë")
    logging.info(f"‚ïë   –°—É–ø–æ—Ä—Ç–∞ (–ø–µ—Å–∫–æ—Å—Ç—Ä—É–π—â–∏–∫): {config.PRICE_SANDBLASTER_SUSPENSIA:>4}‚ÇΩ                            ‚ïë")
    logging.info(f"‚ïë   –ì–ª—É–±–æ–∫–æ–µ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ: {config.PRICE_SPRAYING_DEEP:>4}‚ÇΩ                                         ‚ïë")
    logging.info(f"‚ïë   –ù–µ–≥–ª—É–±–æ–∫–æ–µ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ: {config.PRICE_SPRAYING_SHALLOW:>4}‚ÇΩ                                    ‚ïë")
    
    logging.info("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_prices()
